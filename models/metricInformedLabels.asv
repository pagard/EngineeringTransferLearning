function [Ysp,Ytp] = metricInformedLabels(Xs,Ys,Xt,nf,ne,cb,nMC)
% Metric-informed psuedo-labels using MSD distances
%
% Inputs
% Xs = source features (ns*d)
% Ys = source labels (ns*1)
% Xt = target features (nt*d)
% nf = no. of features (sqrt(N) heuristic)
% ne = no. of ensembles 
% cb = threshold confidence bound
% nMC = no. of monte carlo samples for threshold
%
% Outputs
% Ysp = source psuedo-labels
% Ytp = target psuedo-labels

if nargin<6, cb = 99; end
if nargin<7, nMC = 10000; end

classes = unique(Ys); % classes
C = length(classes); % no. of classes

ns = size(Xs,1); % length of source data
nt = size(Xt,1); % length of target data

dm = nan(ns+nt,ne); % distances per model in ensemble
d = nan(ns+nt,length(classes)); % ensemble distances
de_norm = de; % normalised ensemble distances

for i = 1:C
    
    Xs_c = Xs(Yt == classes(i),:); % source data for class i
    df = size(Xs_tr_c,2); % dimension of feature
        
    % MSD ensembles
    for j = 1:ne
        
        % feature bag
        feat_ind = sort(randperm(df,nf)); % samples features
        fb_s_c = Xs_c(:,feat_ind); % feature bag training data
        fb = [Xs(:,feat_ind);...
              Xt(:,feat_ind)]; % feature bag complete dataset
          
        % MSD model's sample mean and covariance
        mu = mean(fb_s_c);
        sig = cov(fb_s_c);
        
        % MSD
        try
            dm(:,j) = MSD(fb,mu,sig);
        catch
            dm(:,j) = MSD(fb,mu,sig+eye(size(sig))*1e-12);
            warning('Sig not invertible added a jitter');
        end
        
    end
    de(:,i) = mean(dm,2); % ensemble averaged feature
        
    % Monte Carlo threshold for class
    thres = nan(nMC,1);
    for j = 1:nMC
        x_zeta = randn(size(fb_s_c));
        thres(j) = max(MSD(x_zeta,zeros(1,size(x_zeta,2)),eye(size(x_zeta,2))));
    end
    thres = sort(thres);
    thres = thres(floor(nMC*cb/100));
    
    % normalise by threshold
    de_norm(:,i) = de(:,i)/thres;
    de_norm(de(:,i)<thres,i) = 0; % below threshold set to 0
end
    
[~,ind] = min(de_norm,[],2); % min distance

Ypsuedo = ind; % psuedo labels based on minimum distances
